plugins {
    id 'java'
}


ext {
    projectSubstitutions = [:]
    licenseFile = rootProject.file('LICENSE.txt')
    noticeFile = rootProject.file('NOTICE.txt')
}


apply plugin: 'application'

mainClassName = 'transportservice.RunPlugin'

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    // Remove the commented code below once TransportService is published to maven
    //maven { url "https://aws.oss.sonatype.org/content/repositories/snapshots" }
    mavenCentral()
}

dependencies {
    implementation "org.opensearch:opensearch:2.0.0-SNAPSHOT"
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.1'
    implementation "io.netty:netty-all:4.1.73.Final"
    testCompileOnly ("junit:junit:4.13.2") {
        exclude module : 'hamcrest'
        exclude module : 'hamcrest-core'
    }
    // Keeping it for now. Will remove it later once figure out the right dependencies
//    implementation "io.netty:netty-buffer:4.1.73.Final"
//    implementation "io.netty:netty-codec:4.1.73.Final"
//    implementation "io.netty:netty-codec-http:4.1.73.Final"
//    implementation "io.netty:netty-common:4.1.73.Final"
//    implementation "io.netty:netty-handler:4.1.73.Final"
//    implementation "io.netty:netty-resolver:4.1.73.Final"
//    implementation "io.netty:netty-transportservice.transport:4.1.73.Final"
    //implementation "org.apache.logging.log4j:log4j-1.2-api:2.17.1"
    implementation 'javax.xml.bind:jaxb-api:2.2.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation "org.opensearch.test:framework:2.0.0-SNAPSHOT"

}

test {
    useJUnitPlatform()
    jvmArgs '--enable-preview'
    systemProperty 'tests.security.manager', 'false'
    testLogging.showStandardStreams = true
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}
